{"ast":null,"code":"var _jsxFileName = \"D:\\\\Year4\\\\WEB Development with framework\\\\reactjs-first-project\\\\src\\\\components\\\\Pages\\\\ContactUs\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactUs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      des: '',\n      send: false\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClick = e => {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        this.setState({\n          send: true\n        });\n      } else {\n        alert(\"Form has errors.\");\n      }\n    };\n\n    this.handReset = () => {\n      this.form.reset();\n    };\n\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Name\n\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"name\"] !== \"undefined\") {\n      if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"name\"] = \"Only letters\";\n      }\n    } //Email\n\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      let lastAtPos = fields[\"email\"].lastIndexOf(\"@\");\n      let lastDotPos = fields[\"email\"].lastIndexOf(\".\");\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf(\"@@\") == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n\n    if (!fields[\"des\"]) {\n      formIsValid = false;\n      errors[\"des\"] = \"Cannot be empty\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Contact Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"bg-warning pb-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-secondary text-white\",\n            children: \"Fill In Your Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"#\",\n              ref: form => this.form = form,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"Name\",\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Name\",\n                      onChange: this.handleChange.bind(this, \"name\"),\n                      name: \"name\",\n                      value: this.state.fields[\"name\"],\n                      className: \"form-control\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"Email\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      required: true,\n                      name: \"email\",\n                      onChange: this.handleChange.bind(this, \"email\"),\n                      placeholder: \"Email\",\n                      className: \"form-control\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"Description\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"des\",\n                  id: \"\",\n                  cols: \"30\",\n                  onChange: this.handleChange.bind(this, \"des\"),\n                  value: this.state.fields[\"des\"],\n                  placeholder: \"Description\",\n                  rows: \"3\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: this.handleClick,\n              className: \"btn btn-primary mt-3 float-right\",\n              name: \"send\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              onClick: this.handReset,\n              id: \"reset\",\n              className: \"btn btn-danger mt-3 \",\n              name: \"reset\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: this.state.send && /*#__PURE__*/_jsxDEV(Credentials, {\n            name: this.state.name,\n            email: this.state.email,\n            des: this.state.des\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-5 ml-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Google Maps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"bg-warning pb-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                id: \"map\",\n                src: \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d15282225.79979123!2d73.7250245393691!3d20.750301298393563!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x30635ff06b92b791%3A0xd78c4fa1854213a6!2sIndia!5e0!3m2!1sen!2sin!4v1587818542745!5m2!1sen!2sin\",\n                style: {\n                  border: 0\n                },\n                allowfullscreen: \"\",\n                \"aria-hidden\": \"false\",\n                tabindex: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst Credentials = _ref => {\n  let {\n    name,\n    email,\n    des\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header bg-success text-white\",\n      children: \"Your Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Name is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 20\n        }, this), \" \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Email is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 20\n        }, this), \" \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Description is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 20\n        }, this), \" \", des]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Credentials;\nexport default ContactUs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Credentials\");","map":{"version":3,"sources":["D:/Year4/WEB Development with framework/reactjs-first-project/src/components/Pages/ContactUs/index.jsx"],"names":["React","Component","ContactUs","constructor","props","state","name","email","des","send","handleChange","event","value","target","setState","handleClick","e","preventDefault","handleValidation","alert","handReset","form","reset","fields","errors","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","render","bind","border","Credentials"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACC,SAA9B,CAAwC;AAGpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SA4DnBC,KA5DmB,GA4DX;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,GAAG,EAAE,EAHD;AAIJC,MAAAA,IAAI,EAAE;AAJF,KA5DW;;AAAA,SAoEnBC,YApEmB,GAoEHC,KAAD,IAAW;AACtB,YAAM;AAAEL,QAAAA,IAAF;AAAQM,QAAAA;AAAR,UAAkBD,KAAK,CAACE,MAA9B;AACA,WAAKC,QAAL,CAAc;AACV,SAACR,IAAD,GAAQM;AADE,OAAd;AAGH,KAzEkB;;AAAA,SA2EnBG,WA3EmB,GA2EJC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,KAAKC,gBAAL,EAAJ,EAA6B;AACzB,aAAKJ,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFH,MAES;AACLU,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AAEN,KAnFkB;;AAAA,SAsFnBC,SAtFmB,GAsFP,MAAM;AACd,WAAKC,IAAL,CAAUC,KAAV;AACD,KAxFgB;;AAGf,SAAKjB,KAAL,GAAa;AACXkB,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDN,EAAAA,gBAAgB,GAAG;AACjB,QAAIK,MAAM,GAAG,KAAKlB,KAAL,CAAWkB,MAAxB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,WAAW,GAAG,IAAlB,CAHiB,CAKjB;;AACA,QAAI,CAACF,MAAM,CAAC,MAAD,CAAX,EAAqB;AACnBE,MAAAA,WAAW,GAAG,KAAd;AACAD,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,iBAAjB;AACD;;AAED,QAAI,OAAOD,MAAM,CAAC,MAAD,CAAb,KAA0B,WAA9B,EAA2C;AACzC,UAAI,CAACA,MAAM,CAAC,MAAD,CAAN,CAAeG,KAAf,CAAqB,aAArB,CAAL,EAA0C;AACxCD,QAAAA,WAAW,GAAG,KAAd;AACAD,QAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,cAAjB;AACD;AACF,KAhBgB,CAkBjB;;;AACA,QAAI,CAACD,MAAM,CAAC,OAAD,CAAX,EAAsB;AACpBE,MAAAA,WAAW,GAAG,KAAd;AACAD,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,iBAAlB;AACD;;AAED,QAAI,OAAOD,MAAM,CAAC,OAAD,CAAb,KAA2B,WAA/B,EAA4C;AAC1C,UAAII,SAAS,GAAGJ,MAAM,CAAC,OAAD,CAAN,CAAgBK,WAAhB,CAA4B,GAA5B,CAAhB;AACA,UAAIC,UAAU,GAAGN,MAAM,CAAC,OAAD,CAAN,CAAgBK,WAAhB,CAA4B,GAA5B,CAAjB;;AAEA,UACE,EACED,SAAS,GAAGE,UAAZ,IACAF,SAAS,GAAG,CADZ,IAEAJ,MAAM,CAAC,OAAD,CAAN,CAAgBO,OAAhB,CAAwB,IAAxB,KAAiC,CAAC,CAFlC,IAGAD,UAAU,GAAG,CAHb,IAIAN,MAAM,CAAC,OAAD,CAAN,CAAgBQ,MAAhB,GAAyBF,UAAzB,GAAsC,CALxC,CADF,EAQE;AACAJ,QAAAA,WAAW,GAAG,KAAd;AACAD,QAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,oBAAlB;AACD;AACF;;AACD,QAAG,CAACD,MAAM,CAAC,KAAD,CAAV,EAAkB;AACdE,MAAAA,WAAW,GAAG,KAAd;AACFD,MAAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,iBAAhB;AACD;;AAED,SAAKV,QAAL,CAAc;AAAEU,MAAAA,MAAM,EAAEA;AAAV,KAAd;AACA,WAAOC,WAAP;AACD;;AAmCHO,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACQ;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAM,cAAA,MAAM,EAAC,GAAb;AAAiB,cAAA,GAAG,EAAEX,IAAI,IAAI,KAAKA,IAAL,GAAYA,IAA1C;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,KAAf;AAAA,4CACI;AAAO,sBAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAO,sBAAA,IAAI,EAAC,MAAZ;AAAmB,sBAAA,WAAW,EAAC,MAA/B;AAAsC,sBAAA,QAAQ,EAAE,KAAKX,YAAL,CAAkBuB,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B,CAAhD;AAAsF,sBAAA,IAAI,EAAC,MAA3F;AACA,sBAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWkB,MAAX,CAAkB,MAAlB,CADP;AACkC,sBAAA,SAAS,EAAC;AAD5C;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAMI;AAAK,oBAAA,SAAS,EAAC,KAAf;AAAA,4CACI;AAAO,sBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAO,sBAAA,IAAI,EAAC,OAAZ;AAAoB,sBAAA,QAAQ,MAA5B;AAA6B,sBAAA,IAAI,EAAC,OAAlC;AAA0C,sBAAA,QAAQ,EAAE,KAAKb,YAAL,CAAkBuB,IAAlB,CAAuB,IAAvB,EAA6B,OAA7B,CAApD;AAA2F,sBAAA,WAAW,EAAC,OAAvG;AAA+G,sBAAA,SAAS,EAAC;AAAzH;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAcI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AAAO,kBAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAU,kBAAA,IAAI,EAAC,KAAf;AAAqB,kBAAA,EAAE,EAAC,EAAxB;AAA2B,kBAAA,IAAI,EAAC,IAAhC;AAAqC,kBAAA,QAAQ,EAAE,KAAKvB,YAAL,CAAkBuB,IAAlB,CAAuB,IAAvB,EAA6B,KAA7B,CAA/C;AAAoF,kBAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWkB,MAAX,CAAkB,KAAlB,CAA3F;AAAqH,kBAAA,WAAW,EAAC,aAAjI;AAAgJ,kBAAA,IAAI,EAAC,GAArJ;AAAyJ,kBAAA,SAAS,EAAC;AAAnK;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAoBI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE,KAAKR,WAApC;AAAiD,cAAA,SAAS,EAAC,kCAA3D;AAA8F,cAAA,IAAI,EAAC,MAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBJ,eAqBI;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,OAAO,EAAE,KAAKK,SAAnC;AAA8C,cAAA,EAAE,EAAC,OAAjD;AAAyD,cAAA,SAAS,EAAC,sBAAnE;AAA0F,cAAA,IAAI,EAAC,OAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eA8BO;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBACC,KAAKf,KAAL,CAAWI,IAAX,iBACI,QAAC,WAAD;AACI,YAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IADrB;AAEI,YAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFtB;AAGI,YAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG;AAHpB;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,gBA9BP,eAuCI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCAEI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,gBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAQ,gBAAA,EAAE,EAAC,KAAX;AAAiB,gBAAA,GAAG,EAAC,mQAArB;AAAyR,gBAAA,KAAK,EAAE;AAAE0B,kBAAAA,MAAM,EAAE;AAAV,iBAAhS;AAA+S,gBAAA,eAAe,EAAC,EAA/T;AAAkU,+BAAY,OAA9U;AAAsV,gBAAA,QAAQ,EAAC;AAA/V;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8DH;;AA9JmC;;AAiKxC,MAAMC,WAAW,GAAG,QAA0B;AAAA,MAAzB;AAAE7B,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAyB;AAC1C,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,OAAoBF,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,OAAqBC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,OAA2BC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAdD;;KAAM2B,W;AAmBN,eAAejC,SAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ContactUs extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          fields: {},\r\n          errors: {},\r\n        };\r\n      }\r\n    \r\n      handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n    \r\n        //Name\r\n        if (!fields[\"name\"]) {\r\n          formIsValid = false;\r\n          errors[\"name\"] = \"Cannot be empty\";\r\n        }\r\n    \r\n        if (typeof fields[\"name\"] !== \"undefined\") {\r\n          if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"Only letters\";\r\n          }\r\n        }\r\n    \r\n        //Email\r\n        if (!fields[\"email\"]) {\r\n          formIsValid = false;\r\n          errors[\"email\"] = \"Cannot be empty\";\r\n        }\r\n    \r\n        if (typeof fields[\"email\"] !== \"undefined\") {\r\n          let lastAtPos = fields[\"email\"].lastIndexOf(\"@\");\r\n          let lastDotPos = fields[\"email\"].lastIndexOf(\".\");\r\n    \r\n          if (\r\n            !(\r\n              lastAtPos < lastDotPos &&\r\n              lastAtPos > 0 &&\r\n              fields[\"email\"].indexOf(\"@@\") == -1 &&\r\n              lastDotPos > 2 &&\r\n              fields[\"email\"].length - lastDotPos > 2\r\n            )\r\n          ) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Email is not valid\";\r\n          }\r\n        }\r\n        if(!fields[\"des\"]){\r\n            formIsValid = false;\r\n          errors[\"des\"] = \"Cannot be empty\";\r\n        }\r\n    \r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n      }\r\n\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        des: '',\r\n        send: false,\r\n    }\r\n\r\n    //handleChange function\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (this.handleValidation()) {\r\n            this.setState({ send: true })\r\n          } else {\r\n            alert(\"Form has errors.\");\r\n          }\r\n        \r\n    }\r\n\r\n    // reset form\r\n    handReset = () => {\r\n        this.form.reset()\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='container mt-3'>\r\n                    <div>\r\n                        <h2>Contact Us</h2>\r\n                        <hr className=\"bg-warning pb-1\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                Fill In Your Information\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form action=\"#\" ref={form => this.form = form}>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <label htmlFor=\"Name\">Name</label>\r\n                                                <input type=\"text\" placeholder='Name' onChange={this.handleChange.bind(this, \"name\")} name='name' \r\n                                                value={this.state.fields[\"name\"]} className='form-control' />\r\n                                            </div>\r\n                                            <div className=\"col\">\r\n                                                <label htmlFor=\"Email\">Email</label>\r\n                                                <input type=\"email\" required name='email' onChange={this.handleChange.bind(this, \"email\")} placeholder='Email' className='form-control' />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"Description\">Description</label>\r\n                                        <textarea name=\"des\" id=\"\" cols=\"30\" onChange={this.handleChange.bind(this, \"des\")} value={this.state.fields[\"des\"]} placeholder='Description'  rows=\"3\" className='form-control'></textarea>\r\n                                    </div>\r\n                                </form>\r\n                                <button type='button' onClick={this.handleClick} className=\"btn btn-primary mt-3 float-right\" name='send' >Send</button>\r\n                                <button type=\"reset\" onClick={this.handReset} id='reset' className=\"btn btn-danger mt-3 \" name='reset' >Reset</button>\r\n\r\n                            </div>\r\n                        </div>\r\n                       <div className='mt-3'>\r\n                       {this.state.send &&\r\n                            <Credentials\r\n                                name={this.state.name}\r\n                                email={this.state.email}\r\n                                des={this.state.des}\r\n                            />\r\n                        }\r\n                       </div>\r\n                    <div className=\"row mt-5 ml-1\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <h3>Google Maps</h3>\r\n                                <hr className=\"bg-warning pb-1\" />\r\n                                <iframe id='map' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d15282225.79979123!2d73.7250245393691!3d20.750301298393563!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x30635ff06b92b791%3A0xd78c4fa1854213a6!2sIndia!5e0!3m2!1sen!2sin!4v1587818542745!5m2!1sen!2sin\" style={{ border: 0 }} allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst Credentials = ({ name, email, des }) => {\r\n    return (\r\n        <div className='card'>\r\n            <div className='card-header bg-success text-white'>\r\n               Your Information\r\n            </div>\r\n            <div className='card-body'>\r\n                <p><b>Name is:</b> {name}</p>\r\n                <p><b>Email is:</b> {email}</p>\r\n                <p><b>Description is:</b> {des}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default ContactUs;\r\n"]},"metadata":{},"sourceType":"module"}